DEF_OP(0x00, NOP , nop , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0x01, PUSH, push, 1, 0b0100000001010101, 0b11101110, {  })
DEF_OP(0x02, POP , pop , 1, 0b0100000001010101, 0b11100100, {  })
DEF_OP(0x03, POPV, popv, 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0x04, DUP , dup , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0x05, ROT , rot , 1, 0b0000000000010000, 0b11101110, {  })
DEF_OP(0x08, ADD , add , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x09, SUB , sub , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x0a, MUL , mul , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x0b, DIV , div , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x0c, SQR , sqr , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x0d, SQRT, sqrt, 1, 0b0100000000000000, 0b00000001, {  })
DEF_OP(0x0e, DEC , dec , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x0f, INC , inc , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x10, NEG , neg , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x11, MOD , mod , 1, 0b0000000000010000, 0b00000001, {  })
DEF_OP(0x12, MULS, muls, 1, 0b0000000000010000, 0b00000001, {  })
DEF_OP(0x13, DIVS, divs, 1, 0b0000000000010000, 0b00000001, {  })
DEF_OP(0x18, IN  , in  , 1, 0b0100000000000000, 0b11100101, {  })
DEF_OP(0x19, OUT , out , 1, 0b0100000000000000, 0b11101111, {  })
DEF_OP(0x20, JMP , jmp , 1, 0b0000000000010000, 0b11101111, {  })
DEF_OP(0x21, JF  , jf  , 1, 0b0000000000010000, 0b11101111, {  })
DEF_OP(0x22, JT  , jt  , 1, 0b0000000000010000, 0b11101111, {  })
DEF_OP(0x23, CALL, call, 1, 0b0000000000010000, 0b11101111, {  })
DEF_OP(0x24, RET , ret , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0x28, CG  , cg  , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x29, CGE , cge , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x2a, CL  , cl  , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x2b, CLE , cle , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x2c, CE  , ce  , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0x2d, CNE , cne , 1, 0b0100000000010000, 0b00000001, {  })
DEF_OP(0xe0, D2B , d2b , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xe1, B2D , b2d , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xe2, D2I , d2i , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xe3, I2D , i2d , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xe4, D2U , d2u , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xe5, U2D , u2d , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xf0, END , end , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xf1, DUMP, dump, 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xf2, JM  , jm  , 1, 0b0000000000010000, 0b11101110, {  })
DEF_OP(0xf3, DRAW, draw, 1, 0b0000000000010000, 0b11101111, {  })
DEF_OP(0xf4, CLDB, cldb, 1, 0b0000000000010000, 0b11101111, {  })
DEF_OP(0xf5, CLS , cls , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xf6, SAR , sar , 0, 0b0000000000000000, 0b00000000, {  })
DEF_OP(0xf7, RAR , rar , 0, 0b0000000000000000, 0b00000000, {  })