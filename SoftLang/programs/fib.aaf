; === [ ALFC ver. NULL ] ===

; Entrypoint + loader:
$main:
    push dwl:4096
    pop dwl:rz  ; Function frame counter
    call dwl:$__func_main
    end


$__func_fib:
pop dwl:[rz+0]
; if (
push dwl:[rz+0]
push dwl:0
cle dwl:
jt dwl:$__cond_t_00000000001b8900
jmp dwl:$__cond_f_00000000001b8900
; ) {
$__cond_t_00000000001b8900:
push dwl:0
ret
jmp dwl:$__cond_end_00000000001b8900
; } else {
$__cond_f_00000000001b8900:
; if (
push dwl:[rz+0]
push dwl:1
ce dwl:
jt dwl:$__cond_t_00000000001b70e0
jmp dwl:$__cond_f_00000000001b70e0
; ) {
$__cond_t_00000000001b70e0:
push dwl:1
ret
jmp dwl:$__cond_end_00000000001b70e0
; } else {
$__cond_f_00000000001b70e0:
$__cond_end_00000000001b70e0:
; }
$__cond_end_00000000001b8900:
; }
push dwl:[rz+0]
push dwl:1
sub dwl:
push dwl:rz
push dwl:4
add dwl:
pop dwl:rz
call dwl:$__func_fib
push dwl:rz
push dwl:4
sub dwl:
pop dwl:rz
push dwl:[rz+0]
push dwl:2
sub dwl:
push dwl:rz
push dwl:4
add dwl:
pop dwl:rz
call dwl:$__func_fib
push dwl:rz
push dwl:4
sub dwl:
pop dwl:rz
add dwl:
ret
ret  ; Force end of $fib


$__func_main:
; var max
in dwl:
; = 
pop dwl:[rz+0]
; var i
push dwl:0
; = 
pop dwl:[rz+4]
; while (
$__loop_in_00000000001ba1c0:
push dwl:[rz+4]
push dwl:[rz+0]
cle dwl:
jf dwl:$__loop_out_00000000001ba1c0
; ) {
push dwl:[rz+4]
push dwl:rz
push dwl:8
add dwl:
pop dwl:rz
call dwl:$__func_fib
push dwl:rz
push dwl:8
sub dwl:
pop dwl:rz
out dwl:
push dwl:[rz+4]
meow dwl:
push dwl:[rz+4]
push dwl:1
add dwl:
dup
pop dwl:[rz+4]
popv
jmp dwl:$__loop_in_00000000001ba1c0
$__loop_out_00000000001ba1c0:
; }
ret
ret  ; Force end of $main

