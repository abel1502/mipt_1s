–еализуйте двоичную кучу.

ќбработайте запросы следующих видов:

insert x: вставить целое число x в кучу;
getMin: вывести значение минимального элемента в куче (гарантируетс€, что к этому моменту куча не пуста);
extractMin: удалить минимальный элемент из кучи (гарантируетс€, что к этому моменту куча не пуста);
decreaseKey i \N{GREEK CAPITAL LETTER DELTA}: уменьшить число, вставленное на i-м запросе, на целое число \N{GREEK CAPITAL LETTER DELTA}\N{GREATER-THAN OR EQUAL TO}0 (гарантируетс€, что i-й запрос был осуществлЄн ранее, €вл€лс€ запросом добавлени€, а добавленное на этом шаге число всЄ ещЄ лежит в куче).
ћожете считать, что в любой момент времени все числа, хран€щиес€ в куче, попарно различны, а их количество не превышает 105.

¬ходные данные
¬ первой строке содержитс€ число q (1\N{LESS-THAN OR EQUAL TO}q\N{LESS-THAN OR EQUAL TO}106), означающее число запросов.

¬ следующих q строках содержатс€ запросы в описанном выше формате. ƒобавл€емые числа x и поправки \N{GREEK CAPITAL LETTER DELTA} лежат в промежутке [\N{MINUS SIGN}109,109], а \N{GREEK CAPITAL LETTER DELTA}\N{GREATER-THAN OR EQUAL TO}0.

¬ыходные данные
Ќа каждый запрос вида getMin выведите ответ в отдельной строке.

ѕримеры
входные данные
5
insert 5
decreaseKey 1 3
getMin
insert 1
getMin
выходные данные
2
1
входные данные
5
insert 5
getMin
extractMin
insert 10
getMin
выходные данные
5
10

